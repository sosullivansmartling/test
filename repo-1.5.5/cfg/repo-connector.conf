{
  // Array of source repositories. You can have one or multiple repositories configured
  "repositories": [
    // Github repository example
    {
      // Required. Url to the repository
      // WARNING - if you want to change url importing content to Smartling
      // then you have to "reset" Repo-connector state by deleting "cfg/db-data" folder
      "url": "https://github.com/user/repository.git",

      // Required. Alias for the repository. This is used as a prefix for file uri in Smartling
      // A unique alias value is recommended but not required
      "alias": "github_test",

      // Required. Repository type - possible values are GIT and SVN
      "type": "GIT",

      // Optional. Customization for SVN repository layout. You can define trunk folder
      // and folder that contains branches
      // Default layout is /trunk - trunk folder and /branches - branches parent folder
#      "layout": {
#        "trunkFolder": "trunk",
#        "branchesFolder": "branches"
#      },

      // Required. Smartling project API credentials, available from the Smartling Dashboard
      "smartlingProject": {
        "projectId": "projectId",
        "userIdentifier": "userIdentifier",
        "tokenSecret": "tokenSecret"
      },

      // Required. Namespace configuration for the repository. Possible values are true and false
      // false - translations shared across all files, no unique translations for repeated strings
      // true - each file has unique translations
      // WARNING - this parameter should not be changed after files have been uploaded
      "namespace": "false",

      // Required. Relative path to the Smartling configuration file in your repository
      // By default the file name is expected to be smartling-config.json
      "resourcesConfig": "smartling-config.json",

      // Optional. You can put configuration file on the repo connector server
      // It can be absolute of relative from your configuration folder path
      // You don't need to define the "resourcesConfig" parameter in this case
#      "serverResourcesConfig": "",

      // Optional. Regular expression that defines which branch names will be checked for
      // resources to upload to Smartling.
      // All branches are checked if value is empty or undefined
#      "branches": "master",

      // Optional. Polling schedule to determine how often the connector checks for changes in the repository
      // If this value isn't defined the repo connector won't check automatically
      // Make sure that repository webhook is configured and works before disabling automatic polling
      // See http://docs.spring.io/spring/docs/3.2.x/javadoc-api/ for the format specification
      // You can generate or test cron expression there http://www.cronmaker.com/
      // Every 5 mins "0 */5 * * * ?"
      "pollingSchedule": "0 */5 * * * ?",

      // Optional. The repo connector can access a public repository without authentication
      // but translations will not be pushed back to the repository
      // If you need repository authentication choose one of the following authentication types

      // github credentials
#      "userPassword": {
#        "user": "user",
#        "password": "password"
#      }

      // personal token
#      "personalToken": {
#        "personalToken": "d059759a2215621719eea7c897d41c4a7e3cc218"
#      }

      // ssh key authentication.
      // Add your public key to github and provide path for the private key and passphrase here
      // Also update repository url to git@<repository-host>:/<account>/<repository-name>.git
#      "sshKey": {
#        "privateKeyPath": "/home/user/.ssh/repo_key_rsa",
#        "passphrase": "password"
#      }

      // github OAuth authentication
      // The repo connector must be able to show a browser from its session for this authentication type
      // Register repo connector on Github and provide the ClientID and ClientSecret
#      "oauthToken": {
#        "ClientID": "81ae67dee9f74f12b83e",
#        "ClientSecret": "3eb4a2555de2f68a2f37a1a15b32b0d889b7bf64"
#      }
    },

    // Example for Beanstalkapp repository
    {
      // Required. Url to the repository
      // WARNING - if you want to change url importing content to Smartling
      // then you have to "reset" Repo-connector state by deleting "cfg/db-data" folder
      "url": "https://user.git.beanstalkapp.com/repository.git",

      // Required. Alias for the repository. This is used as a prefix for file uri in Smartling
      // A unique alias value is recommended but not required
      "alias": "beanstalkapp_test",

      // Required. Repository type
      "type": "GIT",

      // Required. Smartling project API credentials, available from the Smartling Dashboard
      "smartlingProject": {
        "projectId": "projectId",
        "userIdentifier": "userIdentifier",
        "tokenSecret": "tokenSecret"
      },

      // Required. Namespace configuration for the repository. Possible values are true and false
      // false - translations shared across all files, no unique translations for repeated strings
      // true - each file has unique translations
      // WARNING - this parameter should not be changed after files have been uploaded
      "namespace": "false",

      // Required. Relative path to the Smartling configuration file in your repository
      // By default the file name is expected to be smartling-config.json
      "resourcesConfig": "smartling-config.json",

      // Optional. You can put configuration file on the repo connector server
      // You don't need to define the "resourcesConfig" parameter in this case
#      "serverResourcesConfig": "",

      // Optional. Regular expression that defines which branch names will be checked for
      // resources to upload to Smartling.
      // All branches are checked if value is empty or undefined
#      "branches": "master",

      // Optional. Polling schedule to determine how often the connector checks for changes in the repository
      // If this value isn't defined the repo connector won't check automatically
      // Make sure that repository webhook is configured and works before disabling automatic polling
      // See http://docs.spring.io/spring/docs/3.2.x/javadoc-api/ for the format specification
      // You can generate or test cron expression there http://www.cronmaker.com/
      // Every 5 mins "0 */5 * * * ?"
      "pollingSchedule": "0 */5 * * * ?",

      // Optional. The repo connector can access a public repository without authentication
      // but translations will not be pushed back to the repository
      // If you need repository authentication choose one of the following authentication types

      // beanstalkapp credentials
#      "userPassword": {
#        "user": "user",
#        "password": "password"
#      }

      // ssh key authentication.
      // Add your public key to beanstalkapp and provide path for the private key and passphrase here
      // Also update repository url to git@<repository-host>:/<account>/<repository-name>.git
#      "sshKey": {
#        "privateKeyPath": "/home/user/.ssh/repo_key_rsa",
#        "passphrase": "password"
#      }
    }
  ],

  // Polling schedule to determine how often the connector checks for updates to translation status in Smartling
  // Define the polling period using cron expression
  "scheduler": {
    "checkTranslation": {
      // cron expression in Spring framework format.
      // See http://docs.spring.io/spring/docs/3.2.x/javadoc-api/ for the format specification
      // You can generate or test cron expression there http://www.cronmaker.com/
      // Every 4 hours "0 0 */4 * * ?"
      "cron": "0 0 */4 * * ?"
    }
  }
}
